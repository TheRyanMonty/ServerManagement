// /////////////
// LOGS
// /////////////

// Define which log files to collect for node_exporter
local.file_match "remote_host_logs" {
  path_targets = [{
    // Target localhost for log collection
    __address__ = "localhost",
    // Collect standard system logs
    //__path__    = "/var/log/{syslog,messages,*.log}",
    __path__    = "/var/log/external_logs/*.log",
    // Add instance label with hostname
    instance    = constants.hostname,
    // Add job label for logs
    job         = "remote_log_export",
  }]
}

// Collect logs from files for node_exporter
loki.source.file "remote_host_logs" {
  // Use targets defined in local.file_match
  targets    = local.file_match.remote_host_logs.targets
  // Send logs to the local Loki instance
  forward_to = [loki.process.remote_host_logs_relabels.receiver]
}

loki.process "remote_host_logs_relabels" {
    // For the syslog server, grab the hostname and associate it to the instance value
    stage.regex {
        expression = "^[^ ]+ (?P<hostname>[^ ]+)"
        labels_from_groups = true
    }

    // If omada, <ErrCount>0</ErrCount> is caught, downgrade that to info from error
//    stage.regex {
//        expression = ".*<ErrCount>0</ErrCount>.*"
//    }
//    stage.labels {
//        values = {
//            level = "info",
//        }
//    }

    forward_to = [loki.write.to_loki.receiver]
}
