// /////////////
// LOGGING OPTIONS
// /////////////
logging {
  level  = "warn"    // Options: "debug", "info", "warn", "error"
  format = "logfmt"   // Options: "logfmt", "json"
}

// /////////////
// JOURNAL
// /////////////

// Collect logs from systemd journal for node_exporter integration
loki.source.journal "local_journal" {
  // Only collect logs from the last 24 hours
  max_age       = "24h0m0s"
  // Apply relabeling rules to the logs
  relabel_rules = discovery.relabel.local_journal.rules
  //Define some labels
    labels        = {
      instance = constants.hostname,
      hostname = constants.hostname,
      job = "journal_export",
    }
  // Send logs to the local Loki instance
  forward_to    = [loki.write.to_loki.receiver]
}

// Define relabeling rules for systemd journal logs
discovery.relabel "local_journal" {
  targets = []

  rule {
    // Extract systemd unit information into a unit label
    source_labels = ["__journal__systemd_unit"]
    target_label  = "unit"
  }

  rule {
    // Extract systemd unit information into a service label
    source_labels = ["__journal__systemd_unit"]
    target_label  = "server_service"
  }
  rule {
    // Extract boot ID information into a label
    source_labels = ["__journal__boot_id"]
    target_label  = "boot_id"
  }

  rule {
    // Extract transport information into a label
    source_labels = ["__journal__transport"]
    target_label  = "transport"
  }

  rule {
    // Extract log priority into a level label
    source_labels = ["__journal_priority_keyword"]
    target_label  = "level"
  }

}


// /////////////
// OUT TO LOKI
// /////////////

// Define where to send logs for storage
loki.write "to_loki" {
    endpoint {
        // Send logs to a locally running Loki instance
        url ="http://syslog.montysplace.local:3100/loki/api/v1/push"
    }
}
